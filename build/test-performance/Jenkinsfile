pipeline {
  agent {
    dockerfile {
      dir 'build'
      args '-v /var/run/docker.sock:/var/run/docker.sock --group-add docker'
    }
  }

  triggers {
    pollSCM '@hourly'
    cron '@midnight'
  }

  parameters {
    string(name: 'engineSource', defaultValue: 'http://zugprojenkins/job/ivy-core_product/job/master/lastSuccessfulBuild/', description: 'Engine page url')
  }

  stages {
    stage('build') {
      steps {
        script {
          maven cmd: "clean verify -Dengine.page.url=${params.engineSource} -f build-maven/module/ivy-projects/pom.xml"
        }
      }
      post {
        always {
          archiveArtifacts '**/target/*.iar'
        }
      }
    }

    stage('test-performance') {
      steps {
        script {
          def cluster = load 'build/cluster.groovy'
          cluster.start()
          sh "docker cp ivy-test-cluster-poject/target/ivy-test-cluster-poject-1.0.0-SNAPSHOT.iar docker-ivy-cluster_ivy1_1:/usr/lib/axonivy-engine/deploy/test.iar"
          cluster.waitUntiClusterIsUp()
          cluster.logApacheStatus('after-start')

          cluster.logPage(9080, '/ivy', 'after-start-ivy')
          cluster.logClusterStaqtus('after-start-ivy-cluster')
        }
      }
      post {
        always {
          script {
            def cluster = load 'build/cluster.groovy'
            cluster.logStatus('before-stop')
            cluster.stop()
            cluster.collectDockerLogs()
            cluster.down()
            archiveArtifacts 'logs/**'
          }
        }
      }
    }

  }
}
