<project default="all">
	<!-- Configure whre to download the server zip -->
	<property name="src.job.name" value="Trunk_All" />
	<property name="src.build.number" value="lastSuccessfulBuild" />

	<!-- Configure the thread/user counts of the tests (use "-" as delimiter) -->
	<property name="execute.thread.counts" value="1-4-8-16-32-64-128" />
	<!-- Configure the duration of one test (in seconds) -->
	<property name="execute.duration" value="30"/>
	<!-- Configure the test cases to run (use "-" as delimiter) -->
	<property name="execute.performance.tests" value="ivyscript-dbquery-onetask" />

	<property file="ClusteredServer.properties" />
	<import file="..\IvyServerAntTasks\build_ivy\remote\remote_cluster_build.xml"/>

	<path id="classpath.antcontrib">
		<fileset dir="../antlibs" includes="**/*.jar"/>
	</path>

	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="classpath.antcontrib"/>

	<!--
	jmeter manual:
	http://jakarta.apache.org/jmeter/usermanual/component_reference.html
	
	-->

	<description>
		Executes performance tests
	</description>

	<property name="performance.test.ivyscript" value="ivy/pro/System/TestCasesPerformance/127755AEEB3C441C/executeIvyScript.ivp"/>
	<property name="performance.test.dbquery" value="ivy/pro/System/TestCasesPerformance/127755AEEB3C441C/executeSqlQuery.ivp"/>
	<property name="performance.test.onetask" value="ivy/pro/System/TestCasesPerformance/127755AEEB3C441C/createOneTask.ivp"/>

	<!-- Define an environment variable pointing to JMETER folder or change this -->
	<property environment="env"/>
	<!--property name="jmeter-home" location="${env.JMETER_DIR}"/-->
	<property name="jmeter-home" location="lib/jmeter/"/>

	<!-- ant-jmeter.jar comes with jmeter, be sure this is the release you have -->
	<path id="ant.jmeter.classpath">
		<pathelement
       location="${jmeter-home}/extras/ant-jmeter-1.0.9.jar" />
	</path>

	<taskdef 
	    name="jmeter"
	    classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"
	    classpathref="ant.jmeter.classpath" />

	<target name="installAndStartCluster">
		<antcall target="install-and-run-remote-cluster"/>
	</target>

	<target name="stopAndUninstallCluster">
		<antcall target="uninstall-remote-cluster"/>
	</target>

	<target name="all" depends="executeAllTestsOnAllConfiguration, zipResults"/>

	<target name="clean">
		<delete dir="${dir.cluster.results}"/>
		<delete dir="${dir.cluster.results.raw}"/>
		<delete file="jmeter.log"/>
		<mkdir dir="${dir.cluster.results}/jtl"/>
		<mkdir dir="${dir.cluster.results}/summary"/>
		<mkdir dir="${dir.cluster.results.raw}/logs"/>
	</target>

	<target name="executeAllTestsOnAllConfiguration" depends="clean">
		<!-- Be sure cluster is uninstalled -->
		<trycatch>
			<try>
				<antcall target="uninstall-remote-cluster"/>
			</try>
			<catch>
				<echo>Uninstall cluster failed (can be ignored)</echo>
			</catch>
		</trycatch>

		<trycatch>
			<try>
				<antcall target="installAndStartCluster"/>
				<antcall target="stop-remote-cluster" />

				<antcall target="startClusterExecuteTestsAndStopCluster">
					<param name="execute.nodes" value="4"/>
					<param name="execute.node.names" value="node1,node2,node3,node4"/>
					<param name="execute.duration" value="${execute.duration}"/>
				</antcall>

				<antcall target="startClusterExecuteTestsAndStopCluster">
					<param name="execute.nodes" value="2"/>
					<param name="execute.node.names" value="node1,node2"/>
					<param name="execute.duration" value="${execute.duration}"/>
				</antcall>

				<antcall target="startClusterExecuteTestsAndStopCluster">
					<param name="execute.nodes" value="1"/>
					<param name="execute.node.names" value="node1"/>
					<param name="execute.duration" value="${execute.duration}"/>
				</antcall>
			</try>
			<finally>
				<!-- ensure all cluster nodes are stopped -->
				<antcall target="stop-remote-cluster" />
			</finally>
		</trycatch>
	</target>

	<target name="startClusterExecuteTestsAndStopCluster">
		<for parallel="false" list="${execute.node.names}" param="node.name">
			<sequential>
				<antcall target="remote-server-start">
					<param name="remote.host" value="${@{node.name}.remote.host}" />
					<param name="instance.id" value="${@{node.name}.instance.id}" />
				</antcall>
			</sequential>
		</for>

		<antcall target="executeAllTests">
			<param name="execute.nodes" value="${execute.nodes}"/>
			<param name="execute.duration" value="${execute.duration}"/>
		</antcall>

		<for parallel="true" list="${execute.node.names}" param="node.name">
			<sequential>
				<antcall target="remote-server-stop">
					<param name="remote.host" value="${@{node.name}.remote.host}"/>
					<param name="instance.id" value="${@{node.name}.instance.id}"/>
				</antcall>
			</sequential>
		</for>

	</target>

	<!--
		Executes the full test 
	-->
	<target name="executeAllTests">
		<for parallel="false" list="${execute.performance.tests}" param="performance.test" trim="true" delimiter=",/-">
			<sequential>
				<antcall target="executeTests">
					<param name="execute.name" value="@{performance.test}"/>
					<param name="execute.page" value="${performance.test.@{performance.test}}"/>
					<param name="execute.nodes" value="${execute.nodes}"/>
					<param name="execute.duration" value="${execute.duration}"/>
				</antcall>
			</sequential>
		</for>
	</target>

	<!--
	Executes a test for ${execute.duration} seconds with ${execute.thread.counts} (e.g. 1,5,10,20,30,50,100) users/threads
	Required parameter:
	    execute.thread.counts
		execute.duration
		execute.name
		exeucte.page	
	-->
	<target name="executeTests">
		<!-- reset jkmanager -->
		<tempfile property="reset.jkmanager.result.file" destdir="temp" suffix=".html" deleteonexit="true"/>
		<get src="http://${performance.server}/jkmanager/?cmd=reset&amp;from=list&amp;w=XpertIvyServer" dest="${reset.jkmanager.result.file}" ignoreerrors="true"/>
		<sleep seconds="5"/>

		<for parallel="false" list="${execute.thread.counts}" param="execute.threads" trim="true" delimiter=",/-">
			<sequential>
				<antcall target="singleRequest">
					<param name="singleRequest.name" value="${execute.name}"/>
					<param name="singleRequest.page" value="${execute.page}"/>
					<param name="singleRequest.duration" value="${execute.duration}"/>
					<param name="singleRequest.threads" value="@{execute.threads}"/>
				</antcall>
			</sequential>
		</for>
	</target>

	<!-- 
		Required parameter:
		- singleRequest.name
		- singleRequest.page
		- singleRequest.loops
		- singleRequest.threads
	-->
	<target name="singleRequest">

		<!-- store jkmanager status -->
		<get src="http://${performance.server}/jkmanager/" dest="${dir.cluster.results.raw}/logs/jkmanager_status_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes_before.html" ignoreerrors="true"/>
		<!-- store ivy cluster status -->
		<get src="http://${performance.server}/ivy/info/index.jsp?pageId=cluster_panel" dest="${dir.cluster.results.raw}/logs/cluster_status_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes_before.html" ignoreerrors="true"/>

		<jmeter 
			jmeterhome="${jmeter-home}" 
			testplan="jmetertest/singleRequest.jmx"
			resultlog="${dir.cluster.results}/jtl/singleRequest_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes.jtl"
			jmeterlog-file="{dir.cluster.results}/summary/jmeter_singleRequest_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes.log">
			
			<property name="runner.name" value="${singleRequest.name}"/>
			<property name="runner.server" value="${performance.server}"/>
			<property name="runner.port" value="${performance.port}}"/>
			<property name="runner.page" value="${singleRequest.page}"/>
			<property name="runner.duration" value="${singleRequest.duration}"/>
			<property name="runner.threads" value="${singleRequest.threads}"/>
		</jmeter>

		<!-- store jkmanager status -->
		<get src="http://${performance.server}/jkmanager/" dest="${dir.cluster.results.raw}/logs/jkmanager_status_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes_after.html" ignoreerrors="true"/>
		<!-- store ivy cluster status -->
		<get src="http://${performance.server}/ivy/info/index.jsp?pageId=cluster_panel" dest="${dir.cluster.results.raw}/logs/cluster_status_${singleRequest.name}_${singleRequest.duration}-duration_${singleRequest.threads}-users_${execute.nodes}-nodes_after.html" ignoreerrors="true"/>

	</target>

	<target name="zipResults">
		<zip destfile="${dir.cluster.results}/rawResults.zip" basedir="${dir.cluster.results.raw}/" />
		<delete dir="${dir.cluster.results.raw}"/>
	</target>

</project>